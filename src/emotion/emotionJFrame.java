/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package emotion;

import com.sun.glass.events.KeyEvent;
import static emotion.Emotion.anchor;
import java.awt.Color;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.DataFlavor;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.ButtonGroup;
import javax.swing.JEditorPane;
import javax.swing.JFrame;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author user
 */
public class emotionJFrame extends javax.swing.JFrame {
    private boolean clipmode;
    private String nowUrl = "";
    ButtonGroup group;
    emotionJFrame mainFrm = this;
    /**
     * Creates new form emotionJFrame
     */
    public emotionJFrame() {
        initComponents();
        //diary.addHyperlinkListener(this);
        diary.setBackground(Color.white);
        //    StyleSheet styleSheet = new StyleSheet();
        //    styleSheet.addRule("body {background-color: #FFFFFF;}");
        //    HTMLEditorKit htmlEditorKit = new HTMLEditorKit();
        //    htmlEditorKit.setStyleSheet(styleSheet);
        //    diary.setEditorKit(htmlEditorKit);
        diary.putClientProperty(JEditorPane.HONOR_DISPLAY_PROPERTIES, Boolean.TRUE);
        diary.putClientProperty(JEditorPane.W3C_LENGTH_UNITS, Boolean.TRUE);
        //setStyle();
        emotion.removeAllItems();
        for (int i = 0; i < Emotion.anchor.size(); i++) {
            emotion.addItem(Emotion.anchor.get(i).word);
        }
        group = new ButtonGroup();
        //group.add(jRadioButton1);
        group.add(jRadioButton2);
        group.add(jRadioButton3);
        setMode();
        //setStyle();
        Calendar cal = Calendar.getInstance();
        year.setText("" + cal.get(Calendar.YEAR));
        month.setText("" + (cal.get(Calendar.MONTH)+1));
        setCalT();
        Date date = cal.getTime();
        SimpleDateFormat format1 = new SimpleDateFormat("yyyyMMdd");
        String date1 = format1.format(date);            
        ymd.setText(date1 + ".txt");
        
        UndoHelper helper = new UndoHelper(diary);
        TableColumnModel tcm = calT.getColumnModel();
        CellRenderer cr = new CellRenderer();
        for (int i=0; i < 7; i++) {
            TableColumn tc = tcm.getColumn(i);
            tc.setCellRenderer(cr);
        }
    }
    public void setViewButton(boolean val) {
        jButton4.setEnabled(val);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        emotion = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        status = new java.awt.Label();
        jButton8 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        diary = new javax.swing.JTextPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        calT = new javax.swing.JTable();
        year = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        month = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        ymd = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jSlider1 = new javax.swing.JSlider();
        jSlider2 = new javax.swing.JSlider();
        jSlider3 = new javax.swing.JSlider();
        jRadioButton2 = new javax.swing.JRadioButton();
        jTextField1 = new javax.swing.JTextField();
        cmbDir = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("感情日記");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        emotion.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        emotion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        emotion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emotionActionPerformed(evt);
            }
        });

        jButton1.setText("日記の保存");
        jButton1.setEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setText("Exit");
        jButton3.setEnabled(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("View");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Help");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton7.setText("辞書登録");
        jButton7.setEnabled(false);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jRadioButton3.setSelected(true);
        jRadioButton3.setText("自由入力モード");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        status.setText("下のテキストエリアに日記を書いて、右上の感情を選択してから保存してください。");
        status.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                statusMouseClicked(evt);
            }
        });

        jButton8.setText("文章分析");
        jButton8.setEnabled(false);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(diary);

        calT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "日", "月", "火", "水", "木", "金", "土"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        calT.setCellSelectionEnabled(true);
        calT.setGridColor(new java.awt.Color(204, 204, 204));
        calT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                calTMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(calT);

        year.setText("2017");
        year.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel1.setText("年");

        month.setText("１２");
        month.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthActionPerformed(evt);
            }
        });
        month.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                monthPropertyChange(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel2.setText("月");

        jButton2.setText("<<");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton9.setText(">>");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jSlider1.setMaximum(2000);
        jSlider1.setValue(1000);
        jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider1StateChanged(evt);
            }
        });

        jSlider2.setMaximum(2000);
        jSlider2.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider2.setValue(1000);
        jSlider2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider2StateChanged(evt);
            }
        });

        jSlider3.setMaximum(2000);
        jSlider3.setValue(1000);
        jSlider3.setInverted(true);
        jSlider3.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider3StateChanged(evt);
            }
        });

        jRadioButton2.setText("探索モード");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jTextField1.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                jTextField1CaretPositionChanged(evt);
            }
        });
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTextField1PropertyChange(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 340, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(116, 116, 116)
                            .addComponent(jSlider3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jRadioButton2)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jSlider2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jSlider3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jSlider2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(81, 81, 81)
                            .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jRadioButton2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(19, 19, 19)))
                    .addContainerGap()))
        );

        cmbDir.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "example", "diary", "diary2", "diary3" }));
        cmbDir.setSelectedItem("diary");
        cmbDir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cmbDir, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(emotion, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jButton8, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jButton7, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(105, 105, 105)
                                    .addComponent(jButton2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(3, 3, 3)
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(month, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButton9))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(ymd, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jRadioButton3)))
                                .addComponent(status, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(46, 46, 46)))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton5)
                    .addComponent(cmbDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(emotion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jButton7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jRadioButton3)
                                .addGap(18, 18, 18)
                                .addComponent(ymd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(45, 45, 45))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(71, 71, 71)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1)
                                    .addComponent(month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2)
                                    .addComponent(jButton2)
                                    .addComponent(jButton9))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        jButton1.setEnabled(false);
        Emotion.saveDiary(emotion.getSelectedItem().toString(), this);
        Emotion.setEmotion(emotion.getSelectedItem().toString(), this);
        jButton1.setEnabled(true);
        status.setText("登録しました。");
        setCalT();
        //clipmode = false;
        try {
            if ("".equals(nowUrl)){
                return;
            }
            Thread.sleep(1000);
            diary.setPage(nowUrl + "?");
            //url.setText(nowUrl);
        }catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        jButton1.setEnabled(false);
        jButton3.setEnabled(false);
        try{
            Emotion.saveEmotion(true);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try{
            Emotion.saveEmotion(true);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_formWindowClosing

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        //jButton4.setEnabled(false);
        EmotionView view = new EmotionView(mainFrm);
        try {
            Emotion.saveEmotion(false);
            view.init();
            //view.getCanvas();
            view.main(null);
            //view.getChart().startAnimator();
        }catch  (Exception e) {
            e.printStackTrace();
        }
        //jButton4.setEnabled(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        Help hlp = new Help();
        hlp.setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jSlider1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider1StateChanged
        Emotion.xxx = (double)jSlider1.getValue() / 1000d - 1d;
        setWord();
    }//GEN-LAST:event_jSlider1StateChanged

    private void jSlider2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider2StateChanged
        Emotion.zzz = (double)jSlider2.getValue() / 1000d - 1d;
        setWord();
    }//GEN-LAST:event_jSlider2StateChanged

    private void jSlider3StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider3StateChanged
        Emotion.yyy = (double)jSlider3.getValue() / 1000d - 1d;
        setWord();
    }//GEN-LAST:event_jSlider3StateChanged

    private void emotionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emotionActionPerformed
        if (clipmode) {
            return;
        }
        EmotionAnchor ancNow = null;
        for (int i = 0; i < anchor.size(); i++) {
            if (anchor.get(i).word.equals(emotion.getSelectedItem())) {
                ancNow = anchor.get(i);
            }
        }
        if (ancNow == null) {
            return;
        }
        jSlider1.setValue((int) (ancNow.x * 1000 + 1000));
        jSlider2.setValue((int) (ancNow.z * 1000 + 1000));
        jSlider3.setValue((int) (ancNow.y * 1000 + 1000));
    }//GEN-LAST:event_emotionActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        diary.setText("辞書にありません");
        searchKey();
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        setMode();
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        //１行ずつ自動で計算
        Emotion.bengakuniisosimu();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jTextField1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTextField1PropertyChange
        
    }//GEN-LAST:event_jTextField1PropertyChange

    private void jTextField1CaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jTextField1CaretPositionChanged
        
    }//GEN-LAST:event_jTextField1CaretPositionChanged

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        if ((evt.getKeyCode() == KeyEvent.VK_BACKSPACE) || (evt.getKeyCode() == KeyEvent.VK_DELETE)) {
            diary.setText("");
            status.setText("");
        }
    }//GEN-LAST:event_jTextField1KeyReleased

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        setMode();
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        Emotion.bunseki();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void statusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_statusMouseClicked
        status.setText("");
    }//GEN-LAST:event_statusMouseClicked

    private void monthPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_monthPropertyChange

    }//GEN-LAST:event_monthPropertyChange

    private void monthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthActionPerformed
        setCalT();
    }//GEN-LAST:event_monthActionPerformed

    private void calTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_calTMouseClicked
        diary.setText("");
        status.setText("");
        Calendar cal = Calendar.getInstance();
        try {
            int c = calT.getSelectedColumn();
            int r = calT.getSelectedRow();
            int dd = Integer.parseInt(calT.getValueAt(r, c).toString().replace("●", ""));
            if ((r == 0) && (dd > 15)) {
                return;
            }
            if ((r > 3) && (dd < 15)) {
                return;
            }
            int yyyy = Integer.parseInt( year.getText() );
            int mm = Integer.parseInt( month.getText() ) - 1;
            cal.set(yyyy, mm, dd);
            Date date = cal.getTime();
            SimpleDateFormat format1 = new SimpleDateFormat("yyyyMMdd");
            String date1 = format1.format(date);            
            ymd.setText(date1 + ".txt");
            readDiary(ymd.getText());
            repaint();
            diary.repaint();
        }catch (Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_calTMouseClicked

    private void yearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearActionPerformed
        setCalT();
    }//GEN-LAST:event_yearActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Calendar cal = Calendar.getInstance();
        cal.set(Integer.parseInt(year.getText()), Integer.parseInt(month.getText())-1, 1);
        cal.add(Calendar.MONTH, -1);
        year.setText("" + cal.get(Calendar.YEAR));
        month.setText("" + (cal.get(Calendar.MONTH)+1));
        setCalT();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        Calendar cal = Calendar.getInstance();
        cal.set(Integer.parseInt(year.getText()), Integer.parseInt(month.getText())-1, 1);
        cal.add(Calendar.MONTH, 1);
        year.setText("" + cal.get(Calendar.YEAR));
        month.setText("" + (cal.get(Calendar.MONTH)+1));
        setCalT();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void cmbDirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDirActionPerformed
        Emotion.readDict();
        setCalT();
    }//GEN-LAST:event_cmbDirActionPerformed
    private void setMode(){
        clipmode = !(jRadioButton2.isSelected());
        if (jRadioButton3.isSelected()) {
            diary.setEditable(true);
            diary.setText("");
            //StyleSheet styleSheet = new StyleSheet();
            //styleSheet.addRule("body {background-color: #FFFFFF;}");
            //HTMLEditorKit htmlEditorKit = new HTMLEditorKit();
            //htmlEditorKit.setStyleSheet(styleSheet);
            //diary.setEditorKit(htmlEditorKit);
            //diary.setText("");
        } else {
            diary.setEditable(false);
        }
    }
    public boolean hasDiary(String fileName) {
        try {
            File file = new File(cmbDir.getSelectedItem() + File.separator + fileName);
            if (file.exists()) {
                return true;
            }
            //BufferedReader brW = new BufferedReader(new FileReader(file));
            //StringBuilder sb = new StringBuilder();
            
            //String str = brW.readLine();
            //while (str != null) {
            //    sb.append(str);
            //    sb.append("\n");
            //    str = brW.readLine();
            //}
            //setDiaryText(sb.toString());
        } catch (Exception e) {
            System.out.println(e);
        }
        return false;
    }
    public void readDiary(String fileName) {
        try {
            File file = new File(cmbDir.getSelectedItem() + File.separator + fileName);
            BufferedReader brW = new BufferedReader(new FileReader(file));
            StringBuilder sb = new StringBuilder();
            
            String str = brW.readLine();
            while (str != null) {
                sb.append(str);
                sb.append("\n");
                str = brW.readLine();
            }
            setDiaryText(sb.toString());
        } catch (Exception e) {
            System.out.println(e);
        }
    }
    public void setDiaryText(String txt) {
        diary.setText(txt);
        diary.setCaretPosition(0);
    }
    public String getYmdName() {
        return ymd.getText();
    }
    public String getDiaryText() {
        return diary.getText();
    }
    private void setCalT() {
        Calendar cal = Calendar.getInstance();
        Calendar now = Calendar.getInstance();
        calT.removeColumnSelectionInterval(0, 6);
        calT.removeRowSelectionInterval(0,5);
        try {
            int yyyy = Integer.parseInt( year.getText() );
            int mm = Integer.parseInt( month.getText() ) - 1;
            cal.set(yyyy, mm, 1);
            int week = cal.get(Calendar.DAY_OF_WEEK);
            int r = 0;
            int c = 0;
            int todayR = -1;
            int todayC = -1;
            cal.add(Calendar.DATE , -week+1);
            for (r = 0 ; r < 6; r++) {
                for (c = 0 ; c < 7; c++) {
                    SimpleDateFormat format1 = new SimpleDateFormat("yyyyMMdd");
                    Date time = cal.getTime();
                    String date1 = format1.format(time) + ".txt";            
                    String have = "";
                    String havep = "";
                    if (hasDiary(date1)) {
                        have = "●";
                    }
                    if (cal.get(Calendar.MONTH) + 1 != Integer.parseInt(month.getText())) {
                        havep = "[[ ";
                        have = " ]]";
                    }
                    //Today
                    if (now.get(Calendar.DAY_OF_YEAR) == cal.get(Calendar.DAY_OF_YEAR)) {
                        todayR = r;
                        todayC = c;
                    }
                    calT.setValueAt(havep + cal.get(Calendar.DATE) + have, r, c);

                    cal.add(Calendar.DATE, 1);
                }
            }
            if (todayR>=0) {
                //calT.getSelectionModel().setSelectionInterval(todayR, todayC);//todayR, todayC);
                calT.addColumnSelectionInterval(todayC, todayC);
                calT.addRowSelectionInterval(todayR, todayR);
            }
        }catch (Exception e){
            e.printStackTrace();
        }
        //tick
        calT.repaint();
    }
    private void setWord(){
        //一番近い感情に寄せる
        boolean bk = clipmode;
        float xx,yy,zz;
        xx = Float.valueOf("" +Emotion.xxx) ;
        yy = Float.valueOf("" +Emotion.yyy) ;
        zz = Float.valueOf("" +Emotion.zzz) ;
        if (EmotionView.lgh != null) {
            EmotionView.lgh.set(xx, yy, zz);
        }
        clipmode = true;
        double[] dist = new double[30];
        int idx = 100;
        double min=99999;
        for (int i = 0; i < Emotion.anchor.size(); i++) {
            //距離
            dist[i] = Math.pow((Emotion.anchor.get(i).x - Emotion.xxx ),2) 
                    + Math.pow((Emotion.anchor.get(i).y - Emotion.yyy ),2) 
                    + Math.pow((Emotion.anchor.get(i).z - Emotion.zzz ),2);
            //System.out.println("dist" + dist[i]);
        }
        for (int i = 0; i < Emotion.anchor.size(); i++) {
            if (dist[i] < min) {
                idx = i;
                min = dist[i];
            }
        }
        //System.out.println("idx" + idx);
        emotion.setSelectedIndex(idx);
        clipmode = bk;
        
        diary.setText("");
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < Emotion.keys.size(); i++) {
            if (Math.abs((Emotion.keys.get(i).x) - Emotion.xxx ) < 0.1d) {
            if (Math.abs((Emotion.keys.get(i).y) - Emotion.yyy ) < 0.1d) {
            if (Math.abs((Emotion.keys.get(i).z) - Emotion.zzz ) < 0.1d) {
                sb.append(Emotion.keys.get(i).word + " ");
            }}}
        }
        diary.setText(sb.toString());
    }
    private void searchKey() {
        //html.setText("Search...");
        //jTextField1.setBackground(Color.red);
        String str = jTextField1.getText();
        for (int i = 0; i < Emotion.keys.size(); i++) {
            if (str.equals(Emotion.keys.get(i).word)) {
                jSlider1.setValue((int) (Emotion.keys.get(i).x * 1000 + 1000));
                jSlider2.setValue((int) (Emotion.keys.get(i).z * 1000 + 1000));
                jSlider3.setValue((int) (Emotion.keys.get(i).y * 1000 + 1000));
                //setWord();
                break;
            }
        }
        //jTextField1.setBackground(Color.white);
        //html.setText("End...");

    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(emotionJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(emotionJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(emotionJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(emotionJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new emotionJFrame().setVisible(true);
            }
        });
    }
    public void setText(String str) {
        diary.setText(str);
    }
    public void setOk() {
        jButton1.setEnabled(true);
        jButton3.setEnabled(true);
        diary.setVisible(true);
    }
    public void setExit() {
        jButton1.setEnabled(false);
        jButton3.setEnabled(false);
        diary.setVisible(false);
    }
    public String getDir() {
        return cmbDir.getSelectedItem().toString();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable calT;
    private javax.swing.JComboBox<String> cmbDir;
    private javax.swing.JTextPane diary;
    private javax.swing.JComboBox<String> emotion;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JSlider jSlider2;
    private javax.swing.JSlider jSlider3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField month;
    private java.awt.Label status;
    private javax.swing.JTextField year;
    private javax.swing.JTextField ymd;
    // End of variables declaration//GEN-END:variables
}
